<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nuoplus.system.dao.SysUserMapper">
    <resultMap id="BaseResultMap" type="com.nuoplus.system.model.SysUser">

        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="realname" jdbcType="VARCHAR" property="realname"/>
        <result column="sex" jdbcType="INTEGER" property="sex"/>
        <result column="iphone" jdbcType="VARCHAR" property="iphone"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="salt" jdbcType="VARCHAR" property="salt"/>
        <result column="locked" jdbcType="BIT" property="locked"/>
        <result column="type" jdbcType="VARCHAR" property="type"/>
    </resultMap>
    <sql id="Base_Column_List">

    id, username, realname, sex, iphone, password, salt, locked,type
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_user
        where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="findAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_user where 1=1
        <if test="keyword != null and keyword!=''">
            AND username like CONCAT('%', #{keyword,jdbcType=VARCHAR}, '%')
        </if>
        limit #{startRecords},#{pageSize}
    </select>
    <select id="countAll" resultType="java.lang.Integer">
        select count(id) from sys_user where 1=1
        <if test="keyword != null and keyword!=''">
            AND username like CONCAT('%', #{keyword,jdbcType=VARCHAR}, '%')
        </if>
    </select>
    <select id="findByUsername" parameterType="String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_user
        where username = #{username,jdbcType=VARCHAR}
   </select>
    <select id="findAllJGXX" resultType="java.util.Map">
         SELECT  * FROM  JG_JBXX
    </select>
    <select id="finOrgInfo" parameterType="String"  resultType="java.util.Map">
        SELECT
            t.*, syo. NAME
        FROM
            (
                SELECT
                    *
                FROM
                    sys_user_organization
                WHERE
                    user_id = (
                        SELECT
                            id
                        FROM
                            sys_user
                        WHERE
                            username = #{username}
                    )
            ) AS t
        LEFT JOIN sys_organization syo ON syo.id = t.org_id

    </select>
    <select id="finQyInfo" resultType="java.util.Map" parameterType="String">
        SELECT
            *
        FROM
            enterprise_basic_info
        WHERE
            qy_id = (
                SELECT
                    user_info_id
                FROM
                    sys_user
                WHERE
                    username = #{username}
            )
    </select>
    <select id="getVersion" resultType="java.util.Map">
        SELECT * FROM  version
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">

    delete from sys_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.nuoplus.system.model.SysUser">

    insert into sys_user (id, username, realname, sex, iphone, password, salt,
     locked,type)
    values (#{id,jdbcType=BIGINT},  #{username,jdbcType=VARCHAR},  #{realname,jdbcType=VARCHAR},  #{sex,jdbcType=INTEGER},  #{iphone,jdbcType=VARCHAR}
      #{password,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR},
      #{locked,jdbcType=BIT}, #{type,jdbcType=VARCHAR})
  </insert>

    <insert id="insertSelective" parameterType="com.nuoplus.system.model.SysUser" useGeneratedKeys="true" keyProperty="id">

        insert into sys_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="realname != null">
                realname,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="iphone != null">
                iphone,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="salt != null">
                salt,
            </if>
            <if test="locked != null">
                locked,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="userInfoId != null">
                user_info_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="realname != null">
                #{realname,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=INTEGER},
            </if>
            <if test="iphone != null">
                #{iphone,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="salt != null">
                #{salt,jdbcType=VARCHAR},
            </if>
            <if test="locked != null">
                #{locked,jdbcType=BIT},
            </if>
            <if test="type != null">
                #{type,jdbcType=VARCHAR},
            </if>
            <if test="userInfoId != null">
                #{userInfoId,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.nuoplus.system.model.SysUser">

        update sys_user
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="realname != null">
                realname = #{realname,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=INTEGER},
            </if>
            <if test="iphone != null">
                iphone =#{iphone,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="salt != null">
                salt = #{salt,jdbcType=VARCHAR},
            </if>
            <if test="locked != null">
                locked = #{locked,jdbcType=BIT},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=VARCHAR},
            </if>
            <if test="userInfoId != null">
                user_info_id=#{userInfoId,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.nuoplus.system.model.SysUser">

    update sys_user
    set  username = #{username,jdbcType=VARCHAR},
            realname =  #{realname,jdbcType=VARCHAR},
            sex = #{sex,jdbcType=INTEGER},
            iphone =#{iphone,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      locked = #{locked,jdbcType=BIT},
      type = #{type,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
    <delete id="batchDel" parameterType="String">

        delete from sys_user
        where id in (${_parameter})
    </delete>
</mapper>