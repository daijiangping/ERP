<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nuoplus.system.dao.RolePermissionMapper">
  <resultMap id="BaseResultMap" type="com.nuoplus.system.model.RolePermission">
    <result column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="resource_id" jdbcType="BIGINT" property="resourceId" />
    <result column="permission" jdbcType="VARCHAR" property="permission" />
  </resultMap>
  <sql id="Base_Column_List">
    role_id, resource_id, permission
  </sql>
  <insert id="insert" parameterType="com.nuoplus.system.model.RolePermission">

    insert into role_permission (role_id, resource_id, permission
      )
    values (#{roleId,jdbcType=BIGINT}, #{resourceId,jdbcType=BIGINT}, #{permission,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.nuoplus.system.model.RolePermission">

    insert into role_permission
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="resourceId != null">
        resource_id,
      </if>
      <if test="permission != null">
        permission,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="resourceId != null">
        #{resourceId,jdbcType=BIGINT},
      </if>
      <if test="permission != null">
        #{permission,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <insert id="savePermission" parameterType="java.util.List">
     <selectKey resultType ="java.lang.Integer" keyProperty= "id" order= "AFTER">
                    SELECT LAST_INSERT_ID()
     </selectKey >
    insert into role_permission (
     role_id, resource_id, permission
    )
    values
    <foreach collection="list" item="per" index="index" separator=",">
      (
      #{per.roleId,jdbcType=BIGINT}, #{per.resourceId,jdbcType=BIGINT}, #{per.permission,jdbcType=VARCHAR}
      )
    </foreach>
  </insert>
  <delete id="deleteByRoleId" parameterType="java.lang.Long">
    delete from role_permission where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <select id="findByRoleId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from role_permission
    where role_id = #{roleId}
  </select>
  <delete id="batchDel" parameterType="String">
    delete from role_permission where role_id in (${_parameter})
  </delete>
  <select id="findPermissionByUserName" parameterType="String" resultType="String">
 SELECT
 concat_ws(':',ss.sn,rp.permission)
FROM
	role_permission rp,
	sys_resource ss
WHERE
	role_id IN (
		SELECT
			sur.role_id
		FROM
			sys_user_roles sur
		WHERE
			sur.user_id = (
				SELECT
					su.id
				FROM
					sys_user su
				WHERE
					su.username = #{username,jdbcType=VARCHAR}
			)
	)
AND rp.resource_id = ss.id
  </select>

</mapper>